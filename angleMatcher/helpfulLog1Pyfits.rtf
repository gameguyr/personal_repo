{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf200
\cocoascreenfonts1{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs24 \cf0 runfile('/Users/rlego/Dropbox/PythonWorkspace/convertDeg2Hms.py', wdir='/Users/rlego/Dropbox/PythonWorkspace')\
# *** Spyder Python Console History Log ***\
fname='/Users/rlego/Dropbox/Research/KPNO/somCom.txt'\
data=Table.read(fname, format='ascii')\
ra=data['col1']\
dec=data['col2']\
print ra\
astropy.coordinates.ICRSCoordinates(ra=str(raDeg[i]), dec=str(decDeg[i]), unit=(units.degree, units.degree))\
c1=astropy.coordinates.ICRSCoordinates(ra=ra[0], dec=decDeg[0], unit=(units.degree, units.degree))\
c2=astropy.coordinates.ICRSCoordinates(ra=ra[1], dec=decDeg[1], unit=(units.degree, units.degree))\
sep=c1.separation(c2).radians\
sep\
print ra[0]\
sep=c1.separation(c2).degrees\
sep\
astropy.coordinates.ICRSCoordinates(ra=str(raDeg[i]), dec=str(decDeg[i]), unit=(units.degree, units.degree))\
c1=astropy.coordinates.ICRSCoordinates(ra=ra[0], dec=decDeg[0], unit=(units.degree, units.degree))\
print ra[0], dec[0]\
print ra[1], dec[1]\
runfile('/Users/rlego/Dropbox/PythonWorkspace/convertDeg2Hms.py', wdir='/Users/rlego/Dropbox/PythonWorkspace')\
?124.7(np.pi/180)\
a=124.7(np.pi/180)\
a=124.7*(np.pi/180)\
?a\
a=124.2*(1/206265)\
?a\
runfile('/Users/rlego/Dropbox/PythonWorkspace/angleMatcher.py', wdir='/Users/rlego/Dropbox/PythonWorkspace')\
%timeit coord1=astropy.coordinates.ICRSCoordinates(ra=raDeg[i], dec=decDeg[i], unit=(units.degree, units.degree))\
runfile('/Users/rlego/Dropbox/PythonWorkspace/testingEfficiency.py', wdir='/Users/rlego/Dropbox/PythonWorkspace')\
ra\
runfile('/Users/rlego/Dropbox/PythonWorkspace/testingEfficiency.py', wdir='/Users/rlego/Dropbox/PythonWorkspace')\
a=np.size(raDeg)\
?a\
qa=coord1=astropy.coordinates.ICRSCoordinates(ra=raDeg[i], dec=decDeg[i], unit=(units.degree, units.degree))\
coord1=astropy.coordinates.ICRSCoordinates(ra=raDeg[i], dec=decDeg[i], unit=(units.degree, units.degree))\
?raDeg[i]\
ra\
?ra\
coord1=astropy.coordinates.ICRSCoordinates(ra=ra, dec=dec, unit=(units.degree, units.degree))\
coord1\
import astropysics\
ra\
ra1=astropysics.coordscoord1=astropysics.coords.coordsys.FK5Coordinates((ra, dec))\
coord1=astropysics.coords.coordsys.FK5Coordinates((ra, dec))\
coord1\
dec\
raDeg[0]\
ra2=raDeg[1]\
dec2=decDeg[1]\
runfile('/Users/rlego/Dropbox/PythonWorkspace/testingEfficiency.py', wdir='/Users/rlego/Dropbox/PythonWorkspace')\
coord1=astropysics.coords.coordsys.FK5Coordinates((ra, dec))\
ra\
ra2\
dec2\
de1\
dec\
coord2=astropysics.coords.coordsys.FK5Coordinates((ra2, dec2))\
sep=coord1.separation(coord2)\
?FK5Coordinates\
?astropysics.coords.coordsys.FK5Coordinates\
import profile\
profile(runfile('/Users/rlego/Dropbox/PythonWorkspace/testingEfficiency.py', wdir='/Users/rlego/Dropbox/PythonWorkspace'))\
?astropysics.coords.coordsys.FK5Coordinates\
ra\
coord1\
coord1 = astropysics.coords.\
coord1\
coord2\
coord1-coord2\
coords()\
coord1()\
coord1_1=astropysics.coords.coordsys.AngularCoordinate(ra)\
coord1_2=astropysics.coords.coordsys.AngularCoordinate(dec)\
coord2_2=astropysics.coords.coordsys.AngularCoordinate(ra2)\
coord2_1=astropysics.coords.coordsys.AngularCoordinate(ra2)\
coord2_2=astropysics.coords.coordsys.AngularCoordinate(dec2)\
sep=astropysics.coords.coordsys.AngularSeparation(\
\
)\
sep=astropysics.coords.coordsys.AngularSeparation(coord1)\
sep=astropysics.coords.coordsys.AngularSeparation(coord1_1-coord2_2)\
sep\
print sep\
runfile('/Users/rlego/Dropbox/PythonWorkspace/testingEfficiency.py', wdir='/Users/rlego/Dropbox/PythonWorkspace')\
len(decDeg)\
np.size(decDeg)\
\
##---(Sun Nov 10 20:52:17 2013)---\
runfile('/Users/rlego/Dropbox/PythonWorkspace/testingEfficiency.py', wdir=r'/Users/rlego/Dropbox/PythonWorkspace')\
import numpy as np\
np.sin(90)\
np.sin(np.pi)\
runfile('/Users/rlego/Dropbox/PythonWorkspace/testingEfficiency.py', wdir='/Users/rlego/Dropbox/PythonWorkspace')\
print i\
runfile('/Users/rlego/Dropbox/PythonWorkspace/testingEfficiency.py', wdir='/Users/rlego/Dropbox/PythonWorkspace')\
\
##---(Sun Nov 10 21:40:19 2013)---\
runfile('/Users/rlego/Dropbox/PythonWorkspace/testingEfficiency2.py', wdir='/Users/rlego/Dropbox/PythonWorkspace')\
import efficient2\
efficient2(raDeg)\
efficient2.test(raDeg)\
fname='/Users/rlego/Dropbox/Research/KPNO/matchedCoordinates.txt'\
import numpy\
?numpy\
\
##---(Tue Nov 12 18:58:39 2013)---\
import pyfits as pf\
filename='/Users/rlego/Dropbox/Research/KPNO/\
filename='/Users/rlego/Dropbox/Research/KPNO/som1sex.fits'\
filename1='/Users/rlego/Dropbox/Research/KPNO/som1sex.fits'\
filename2='/Users/rlego/Dropbox/Research/KPNO/som2sex.fits'\
list1=pf.open(filename1)\
list2=pf.open(filename2)\
data1=list1[2].data\
data2=list2[2].data\
data1\
ra1=data1['ALPHA_J2000']\
ra2=data2['ALPHA_J2000']\
dec1=data1['DELTA_J2000']\
dec2=data2['DELTA_J2000']\
list1.info()\
ra1\
ra=[ra1, ra2]\
dec=[dec1, dec2]\
?ra\
ra=np.array(ra)\
?ra\
dec=np.array(dec)\
?dec\
a=[1, 2, 3]\
b=[4, 5, 6]\
c=[a, b]\
c\
c=a+b\
c\
ra=ra1+ra2\
a\
a=[0, 1, 2, 3]\
c=a+b\
c\
ra=np.array(ra1.append(ra2))\
?ra1\
np.concatenate(ra1, ra2)\
np.concatenate((ra1, ra2))\
ra=np.concatenate((ra1, ra2))\
dec=np.concatenate((dec1, dec2))\
list1.info()\
col1 = pyfits.Column(name='RA', format='1D', array=ra)\
import pyfits\
col1 = pyfits.Column(name='RA', format='1D', array=ra)\
col2 = pyfits.Column(name='DEC', format='1D', array=dec)\
cols=pyfits.ColDefs([col1, col2])\
hdulist=pyfits.HDUList([cols])\
hdu=pyfits.new_table(cols)\
hdulist = pyfits.HDUList(hdu)\
filename\
Out[51]: '/Users/rlego/Dropbox/Research/KPNO/som1sex.fits'\
filename='/Users/rlego/Dropbox/Research/KPNO/somCombined.fits'\
hdulist = pyfits.HDUList(hdu)\
hdulist.writeto(filename)\
h\
cols\
ra1\
ra\
len(ra)\
dec\
len(dec)\
print len((ra,dec))\
print len(ra), len(dec)\
cols\
raHduObject = pyfits.PrimaryHDU(ra)\
dechduObject = pyfits.PrimaryHDU(dec)\
decHduObject = pyfits.PrimaryHDU(dec)\
hduList = pyfits.HDUList([dechduObject, decHduObject])\
tbhdu\
tbhdu=cols\
tbhdu = pyfits.PrimaryHDU(tbhdu)\
tbhdu\
tbhdu['RA']\
tbhdu.info()\
list\
hduList.writeto(filename')\
hduList.writeto('filename')\
dechduObject\
decHduLIst = pyfits.HDUList([dechduObject])\
decHduList = pyfits.HDUList([dechduObject])\
decHduList.writeto(filename)\
hduList = pyfits.HDUList([rahduObject, dechduObject])\
ra\
raHduObject = pyfits.PrimaryHDU(ra)\
hduList = pyfits.HDUList([raHduObject, dechduObject])\
hduList = pyfits.HDUList([raHduObject, decHduObject])\
decHduObject\
hduList.writeto(filename)\
tbhdu = pyfits.PrimaryHDU(tbhdu)\
raO=pyfits.PrimaryHDU(ra)\
decO=pyfits.PrimaryHDU(dec)\
hl = pyfits.HDUList([raO, decO])\
list = pyfits.HDUList([cols])\
cols\
cols=pyfits.PrimaryHDU(cols)\
tbhdu = pyfits.new_table(pyfits.ColDefs([pyfits.Column(name='RA',\
...                                                        format='20A',\
...                                                        array=ra),\
...                                          pyfits.Column(name='DEC',\
...                                                        format='20A',\
...                                                        array=dec)]\
...                                        ))\
hdulist=pyfits.HDUList([tbhdu])\
hdulist.writeto('filename')\
cols\
hdulist.writeto('filename', hdulist)\
ra1\
?ra1\
data1\
?pyfits.PrimaryHDU\
?pyfits.HDUList\
ra0.header.ascardlist()\
raO.header.ascardlist()\
decO.header.ascardlist()\
hdulist = pyfits.HDUList([hdu])\
hdulist = pyfits.HDUList([raO, decO])\
hdulist.writeto(filename)\
hdulist = pyfits.HDUList([ decO])\
hdulist.writeto(filename)\
hdulist = pyfits.HDUList(raO, decO)\
hdulist.writeto(filename)\
hdulist.writeto(filename, clobber=true)\
hdulist.writeto(filename, clobber=True)}